package chap07.oop;
/*
 * <<상속관계에서 생성자가 갖는 특징>>
 * 1. 클래스의 모든 생성자 메소드의 첫 번째 문장에는 부모클래스의 기본생성자를
 * 	    호출하는 명령문이 생략되어 있다.
 * 	  => 부모의 생성자를 호출하는 방법은 super(...)
 * 		 super()는 부모의 매개변수 없는 기본생상자
 * 
 * 	  => 이미 다른 생성자를 호출하는 경우에는 super()를 할 수 없다.
 * 		 this()를 호출하는 경우 super()를 호출 할 수 없다.
 * 2. 모든 클래스의 최상위 클래스는 java.lang.Object클래스
 * 	  => 자바에서 실행되는 모든 객체가 갖는 공토의 특징을 정의한 클래스로
 * 	           상속받고 있는 클래스가 없는 경우 컴파일러가 자등으로 상속한다.
 * 
 */

class SuperA{
	String name;
	int age;
	SuperA(){
		super();
	}
	SuperA(String name, int age){
		super();
		this.name = name;
		this.age = age;
	}
}
class SuperB extends SuperA{
	String addr;
}

class SubA extends SuperA{
	String addr;
	int point;
	SubA(){
		super(); //모든 생성자는 super() 생략
	}
	SubA(String addr){
		super();
		this.addr = addr;
	}
	SubA(String addr, int point){
		this(addr);//현재 객체에 이미 정의되어 있는 또 다른 생성자를 호출
		this.point = point;
	}
}
public class InheritanceTest03 {
	public static void main(String[] args) {
		SubA obj = new SubA("서울시", 1000);
		System.out.println(obj.name+","+obj.addr+","+obj.age+","+obj.point);
	}
}
